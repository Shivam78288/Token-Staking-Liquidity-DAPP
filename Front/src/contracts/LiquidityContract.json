{
  "contractName": "LiquidityContract",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "reserveContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserveContract",
          "type": "address"
        }
      ],
      "name": "setReserveContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserveContract\",\"type\":\"address\"}],\"name\":\"setReserveContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/LiquidityContract.sol\":\"LiquidityContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/LiquidityContract.sol\":{\"keccak256\":\"0xdb11ef10375f5757a869a3f95d6c3a2eed92c23030c60f69ae8b3c2326ca4db8\",\"urls\":[\"bzz-raw://a7700509068bb25793585582f63a1f1d4db34abb4e1844b24a2cc2edb66056a0\",\"dweb:/ipfs/QmUYgnh3uTJsrrBwKtQ5kBoRj8VnNqyRt1FXAHeLK6DhLa\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104c5806100616000396000f3fe6080604052600436106100385760003560e01c8063527a52c81461012a578063a7f43acd14610153578063f851a4401461017e57610125565b366101255760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806100e45750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011a90610349565b60405180910390fd5b005b600080fd5b34801561013657600080fd5b50610151600480360381019061014c91906103cc565b6101a9565b005b34801561015f57600080fd5b5061016861027c565b6040516101759190610408565b60405180910390f35b34801561018a57600080fd5b506101936102a0565b6040516101a09190610408565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610239576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102309061046f565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082825260208201905092915050565b7f4f6e6c79205265736572766520436f6e74726163742f41646d696e2063616e2060008201527f63616c6c20746869732066756e6374696f6e0000000000000000000000000000602082015250565b60006103336032836102c6565b915061033e826102d7565b604082019050919050565b6000602082019050818103600083015261036281610326565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103998261036e565b9050919050565b6103a98161038e565b81146103b457600080fd5b50565b6000813590506103c6816103a0565b92915050565b6000602082840312156103e2576103e1610369565b5b60006103f0848285016103b7565b91505092915050565b6104028161038e565b82525050565b600060208201905061041d60008301846103f9565b92915050565b7f4f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b6000610459600a836102c6565b915061046482610423565b602082019050919050565b600060208201905081810360008301526104888161044c565b905091905056fea264697066735822122061e1827edc0aaa236248ea7aa618703090b96c1332c9a97da789a473f1ee7c8864736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c8063527a52c81461012a578063a7f43acd14610153578063f851a4401461017e57610125565b366101255760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806100e45750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011a90610349565b60405180910390fd5b005b600080fd5b34801561013657600080fd5b50610151600480360381019061014c91906103cc565b6101a9565b005b34801561015f57600080fd5b5061016861027c565b6040516101759190610408565b60405180910390f35b34801561018a57600080fd5b506101936102a0565b6040516101a09190610408565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610239576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102309061046f565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082825260208201905092915050565b7f4f6e6c79205265736572766520436f6e74726163742f41646d696e2063616e2060008201527f63616c6c20746869732066756e6374696f6e0000000000000000000000000000602082015250565b60006103336032836102c6565b915061033e826102d7565b604082019050919050565b6000602082019050818103600083015261036281610326565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103998261036e565b9050919050565b6103a98161038e565b81146103b457600080fd5b50565b6000813590506103c6816103a0565b92915050565b6000602082840312156103e2576103e1610369565b5b60006103f0848285016103b7565b91505092915050565b6104028161038e565b82525050565b600060208201905061041d60008301846103f9565b92915050565b7f4f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b6000610459600a836102c6565b915061046482610423565b602082019050919050565b600060208201905081810360008301526104888161044c565b905091905056fea264697066735822122061e1827edc0aaa236248ea7aa618703090b96c1332c9a97da789a473f1ee7c8864736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3703:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "103:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "120:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "125:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "113:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "113:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "113:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "141:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "160:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "165:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "156:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "156:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "141:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "75:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "91:11:11",
                "type": ""
              }
            ],
            "src": "7:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "288:131:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "318:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "306:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:14:11"
                      },
                      {
                        "hexValue": "4f6e6c79205265736572766520436f6e74726163742f41646d696e2063616e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "322:34:11",
                        "type": "",
                        "value": "Only Reserve Contract/Admin can "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "299:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "299:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "378:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "386:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "374:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "374:15:11"
                      },
                      {
                        "hexValue": "63616c6c20746869732066756e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "391:20:11",
                        "type": "",
                        "value": "call this function"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "367:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "367:45:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "367:45:11"
                }
              ]
            },
            "name": "store_literal_in_memory_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "280:6:11",
                "type": ""
              }
            ],
            "src": "182:237:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "571:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "581:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "647:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "652:2:11",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "588:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "581:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "753:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f",
                      "nodeType": "YulIdentifier",
                      "src": "664:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "664:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "664:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "766:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "777:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "782:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "773:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "766:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "559:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "567:3:11",
                "type": ""
              }
            ],
            "src": "425:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "968:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "978:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "990:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1001:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "986:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "978:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1025:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1036:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1021:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1021:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1044:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1050:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1040:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1040:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1014:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1014:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1014:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1070:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1204:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1078:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1070:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "948:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "963:4:11",
                "type": ""
              }
            ],
            "src": "797:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1262:35:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1272:19:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1288:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1282:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1282:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1272:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1255:6:11",
                "type": ""
              }
            ],
            "src": "1222:75:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1392:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1409:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1412:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1402:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1402:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1402:12:11"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1303:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1515:28:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1532:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1535:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1525:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:12:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1525:12:11"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1426:117:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1594:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1604:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1619:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1626:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1615:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1615:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1604:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1576:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1586:7:11",
                "type": ""
              }
            ],
            "src": "1549:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1726:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1736:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1765:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1747:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1747:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1736:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1708:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1718:7:11",
                "type": ""
              }
            ],
            "src": "1681:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1826:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1883:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1892:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1895:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1885:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1885:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1885:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1849:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1874:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1856:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1856:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1846:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1846:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1839:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1836:63:11"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1819:5:11",
                "type": ""
              }
            ],
            "src": "1783:122:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1963:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1973:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1995:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1982:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1982:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1973:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2038:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2011:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2011:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2011:33:11"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1941:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1949:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1957:5:11",
                "type": ""
              }
            ],
            "src": "1911:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2122:263:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2168:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2170:77:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2170:79:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2170:79:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2143:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2152:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2139:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2139:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2164:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2135:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2132:119:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2261:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2276:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2290:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2280:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2305:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2340:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2351:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2336:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2336:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2360:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2315:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2315:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2305:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2092:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2103:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2115:6:11",
                "type": ""
              }
            ],
            "src": "2056:329:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2456:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2473:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2496:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2478:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2478:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2466:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2466:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2444:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2451:3:11",
                "type": ""
              }
            ],
            "src": "2391:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2613:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2623:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2635:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2646:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2631:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2631:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2623:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2703:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2716:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2727:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2712:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2712:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2659:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2659:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2659:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2585:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2597:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2608:4:11",
                "type": ""
              }
            ],
            "src": "2515:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2849:54:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2871:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2879:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2867:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2867:14:11"
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2883:12:11",
                        "type": "",
                        "value": "Only admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2860:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2860:36:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2860:36:11"
                }
              ]
            },
            "name": "store_literal_in_memory_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2841:6:11",
                "type": ""
              }
            ],
            "src": "2743:160:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3055:220:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3065:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3131:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3136:2:11",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3072:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3072:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3065:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3237:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
                      "nodeType": "YulIdentifier",
                      "src": "3148:88:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3148:93:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3148:93:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3250:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3261:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3266:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3257:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3257:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3250:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3043:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3051:3:11",
                "type": ""
              }
            ],
            "src": "2909:366:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3452:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3462:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3474:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3485:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3470:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3470:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3462:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3509:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3520:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3505:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3505:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3528:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3534:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3524:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3524:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3498:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3498:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3498:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3554:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3688:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3562:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3562:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3554:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3432:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3447:4:11",
                "type": ""
              }
            ],
            "src": "3281:419:11"
          }
        ]
      },
      "contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only Reserve Contract/Admin can \")\n\n        mstore(add(memPtr, 32), \"call this function\")\n\n    }\n\n    function abi_encode_t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "199:606:6:-:0;;;363:57;;;;;;;;;;402:10;394:5;;:18;;;;;;;;;;;;;;;;;;199:606;;;;;;",
  "deployedSourceMap": "199:606:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:15;;;;;;;;;;663:29;;:10;:29;;;:52;;;;710:5;;;;;;;;;;;696:19;;:10;:19;;;663:52;641:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;199:606;;;;;428:168;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;297:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;334:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;428:168;518:10;509:19;;:5;;;;;;;;;;;:19;;;501:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;572:16;554:15;;:34;;;;;;;;;;;;;;;;;;428:168;:::o;297:30::-;;;;;;;;;;;;:::o;334:20::-;;;;;;;;;;;;;:::o;7:169:11:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:237::-;322:34;318:1;310:6;306:14;299:58;391:20;386:2;378:6;374:15;367:45;182:237;:::o;425:366::-;567:3;588:67;652:2;647:3;588:67;:::i;:::-;581:74;;664:93;753:3;664:93;:::i;:::-;782:2;777:3;773:12;766:19;;425:366;;;:::o;797:419::-;963:4;1001:2;990:9;986:18;978:26;;1050:9;1044:4;1040:20;1036:1;1025:9;1021:17;1014:47;1078:131;1204:4;1078:131;:::i;:::-;1070:139;;797:419;;;:::o;1303:117::-;1412:1;1409;1402:12;1549:126;1586:7;1626:42;1619:5;1615:54;1604:65;;1549:126;;;:::o;1681:96::-;1718:7;1747:24;1765:5;1747:24;:::i;:::-;1736:35;;1681:96;;;:::o;1783:122::-;1856:24;1874:5;1856:24;:::i;:::-;1849:5;1846:35;1836:63;;1895:1;1892;1885:12;1836:63;1783:122;:::o;1911:139::-;1957:5;1995:6;1982:20;1973:29;;2011:33;2038:5;2011:33;:::i;:::-;1911:139;;;;:::o;2056:329::-;2115:6;2164:2;2152:9;2143:7;2139:23;2135:32;2132:119;;;2170:79;;:::i;:::-;2132:119;2290:1;2315:53;2360:7;2351:6;2340:9;2336:22;2315:53;:::i;:::-;2305:63;;2261:117;2056:329;;;;:::o;2391:118::-;2478:24;2496:5;2478:24;:::i;:::-;2473:3;2466:37;2391:118;;:::o;2515:222::-;2608:4;2646:2;2635:9;2631:18;2623:26;;2659:71;2727:1;2716:9;2712:17;2703:6;2659:71;:::i;:::-;2515:222;;;;:::o;2743:160::-;2883:12;2879:1;2871:6;2867:14;2860:36;2743:160;:::o;2909:366::-;3051:3;3072:67;3136:2;3131:3;3072:67;:::i;:::-;3065:74;;3148:93;3237:3;3148:93;:::i;:::-;3266:2;3261:3;3257:12;3250:19;;2909:366;;;:::o;3281:419::-;3447:4;3485:2;3474:9;3470:18;3462:26;;3534:9;3528:4;3524:20;3520:1;3509:9;3505:17;3498:47;3562:131;3688:4;3562:131;:::i;:::-;3554:139;;3281:419;;;:::o",
  "source": "pragma solidity ^0.8.0;\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\nimport '@openzeppelin/contracts/utils/Address.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\n\r\ncontract LiquidityContract{\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n    address public reserveContract;\r\n    address public admin;\r\n\r\n    constructor() public{\r\n        admin = msg.sender;\r\n    }\r\n\r\n    function setReserveContract(address _reserveContract) external{\r\n        require(admin == msg.sender, \"Only admin\");\r\n        reserveContract = _reserveContract;\r\n    }\r\n\r\n    receive() external payable{\r\n        require(\r\n            msg.sender == reserveContract || msg.sender == admin, \r\n            \"Only Reserve Contract/Admin can call this function\"\r\n        );\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Shivam Agrawal\\Desktop\\Ropsten\\contracts\\LiquidityContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/LiquidityContract.sol",
    "exportedSymbols": {
      "Address": [
        945
      ],
      "IERC20": [
        623
      ],
      "LiquidityContract": [
        1339
      ],
      "SafeMath": [
        1279
      ]
    },
    "id": 1340,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1281,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1282,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1340,
        "sourceUnit": 1280,
        "src": "25:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 1283,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1340,
        "sourceUnit": 946,
        "src": "84:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1284,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1340,
        "sourceUnit": 624,
        "src": "137:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LiquidityContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1339,
        "linearizedBaseContracts": [
          1339
        ],
        "name": "LiquidityContract",
        "nameLocation": "208:17:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1287,
            "libraryName": {
              "id": 1285,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1279,
              "src": "238:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "232:27:6",
            "typeName": {
              "id": 1286,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1290,
            "libraryName": {
              "id": 1288,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 945,
              "src": "271:7:6"
            },
            "nodeType": "UsingForDirective",
            "src": "265:26:6",
            "typeName": {
              "id": 1289,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "283:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "a7f43acd",
            "id": 1292,
            "mutability": "mutable",
            "name": "reserveContract",
            "nameLocation": "312:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 1339,
            "src": "297:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1291,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "297:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 1294,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "349:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1339,
            "src": "334:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1293,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "334:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1302,
              "nodeType": "Block",
              "src": "383:37:6",
              "statements": [
                {
                  "expression": {
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1297,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1294,
                      "src": "394:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1298,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "402:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "402:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "394:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "394:18:6"
                }
              ]
            },
            "id": 1303,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "374:2:6"
            },
            "returnParameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:0:6"
            },
            "scope": 1339,
            "src": "363:57:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "490:106:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1309,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1294,
                          "src": "509:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1310,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "518:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "518:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "509:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e",
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "530:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
                          "typeString": "literal_string \"Only admin\""
                        },
                        "value": "Only admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
                          "typeString": "literal_string \"Only admin\""
                        }
                      ],
                      "id": 1308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "501:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1315,
                  "nodeType": "ExpressionStatement",
                  "src": "501:42:6"
                },
                {
                  "expression": {
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1316,
                      "name": "reserveContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1292,
                      "src": "554:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1317,
                      "name": "_reserveContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "572:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "554:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1319,
                  "nodeType": "ExpressionStatement",
                  "src": "554:34:6"
                }
              ]
            },
            "functionSelector": "527a52c8",
            "id": 1321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setReserveContract",
            "nameLocation": "437:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1305,
                  "mutability": "mutable",
                  "name": "_reserveContract",
                  "nameLocation": "464:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "456:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:26:6"
            },
            "returnParameters": {
              "id": 1307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "490:0:6"
            },
            "scope": 1339,
            "src": "428:168:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "630:172:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1325,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "663:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "663:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1327,
                            "name": "reserveContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "677:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "663:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1329,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "696:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "696:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1331,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1294,
                            "src": "710:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "696:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "663:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79205265736572766520436f6e74726163742f41646d696e2063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "731:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f",
                          "typeString": "literal_string \"Only Reserve Contract/Admin can call this function\""
                        },
                        "value": "Only Reserve Contract/Admin can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f",
                          "typeString": "literal_string \"Only Reserve Contract/Admin can call this function\""
                        }
                      ],
                      "id": 1324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "641:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:153:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "641:153:6"
                }
              ]
            },
            "id": 1338,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:2:6"
            },
            "returnParameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:6"
            },
            "scope": 1339,
            "src": "604:198:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1340,
        "src": "199:606:6",
        "usedErrors": []
      }
    ],
    "src": "0:805:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/LiquidityContract.sol",
    "exportedSymbols": {
      "Address": [
        945
      ],
      "IERC20": [
        623
      ],
      "LiquidityContract": [
        1339
      ],
      "SafeMath": [
        1279
      ]
    },
    "id": 1340,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1281,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1282,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1340,
        "sourceUnit": 1280,
        "src": "25:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 1283,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1340,
        "sourceUnit": 946,
        "src": "84:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1284,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1340,
        "sourceUnit": 624,
        "src": "137:56:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LiquidityContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1339,
        "linearizedBaseContracts": [
          1339
        ],
        "name": "LiquidityContract",
        "nameLocation": "208:17:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1287,
            "libraryName": {
              "id": 1285,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1279,
              "src": "238:8:6"
            },
            "nodeType": "UsingForDirective",
            "src": "232:27:6",
            "typeName": {
              "id": 1286,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "251:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1290,
            "libraryName": {
              "id": 1288,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 945,
              "src": "271:7:6"
            },
            "nodeType": "UsingForDirective",
            "src": "265:26:6",
            "typeName": {
              "id": 1289,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "283:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "a7f43acd",
            "id": 1292,
            "mutability": "mutable",
            "name": "reserveContract",
            "nameLocation": "312:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 1339,
            "src": "297:30:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1291,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "297:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 1294,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "349:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1339,
            "src": "334:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1293,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "334:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1302,
              "nodeType": "Block",
              "src": "383:37:6",
              "statements": [
                {
                  "expression": {
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1297,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1294,
                      "src": "394:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1298,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "402:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "402:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "394:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "394:18:6"
                }
              ]
            },
            "id": 1303,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "374:2:6"
            },
            "returnParameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "383:0:6"
            },
            "scope": 1339,
            "src": "363:57:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "490:106:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1309,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1294,
                          "src": "509:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1310,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "518:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "518:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "509:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e",
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "530:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
                          "typeString": "literal_string \"Only admin\""
                        },
                        "value": "Only admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db",
                          "typeString": "literal_string \"Only admin\""
                        }
                      ],
                      "id": 1308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "501:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1315,
                  "nodeType": "ExpressionStatement",
                  "src": "501:42:6"
                },
                {
                  "expression": {
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1316,
                      "name": "reserveContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1292,
                      "src": "554:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1317,
                      "name": "_reserveContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1305,
                      "src": "572:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "554:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1319,
                  "nodeType": "ExpressionStatement",
                  "src": "554:34:6"
                }
              ]
            },
            "functionSelector": "527a52c8",
            "id": 1321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setReserveContract",
            "nameLocation": "437:18:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1305,
                  "mutability": "mutable",
                  "name": "_reserveContract",
                  "nameLocation": "464:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "456:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:26:6"
            },
            "returnParameters": {
              "id": 1307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "490:0:6"
            },
            "scope": 1339,
            "src": "428:168:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1337,
              "nodeType": "Block",
              "src": "630:172:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1325,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "663:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "663:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1327,
                            "name": "reserveContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "677:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "663:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1329,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "696:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "696:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1331,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1294,
                            "src": "710:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "696:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "663:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79205265736572766520436f6e74726163742f41646d696e2063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "731:52:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f",
                          "typeString": "literal_string \"Only Reserve Contract/Admin can call this function\""
                        },
                        "value": "Only Reserve Contract/Admin can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83e8f69702818049f755f7ae23a3a633ddefedf0a411d8010e81711f1addf95f",
                          "typeString": "literal_string \"Only Reserve Contract/Admin can call this function\""
                        }
                      ],
                      "id": 1324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "641:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:153:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "641:153:6"
                }
              ]
            },
            "id": 1338,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:2:6"
            },
            "returnParameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:6"
            },
            "scope": 1339,
            "src": "604:198:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1340,
        "src": "199:606:6",
        "usedErrors": []
      }
    ],
    "src": "0:805:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xa239df727Dd98e484c1b63A4A13d2A28053B76bf",
      "transactionHash": "0xb07c7404de82efe16f8f3f5629286b432e953d175baf8155fe4f1fc6d741cb40"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-07T11:44:48.957Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}